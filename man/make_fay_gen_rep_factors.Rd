% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fays_generalized_replication.R
\name{make_fay_gen_rep_factors}
\alias{make_fay_gen_rep_factors}
\title{Form replication factors using Fay's generalized replication method}
\usage{
make_fay_gen_rep_factors(Sigma, max_replicates)
}
\arguments{
\item{Sigma}{A quadratic form matrix}

\item{max_replicates}{The maximum number of replicates to allow (should be as large as possible, given computer memory/storage limitations).
A commonly-recommended default is 500. If the number of replicates needed
for a balanced, fully-efficient estimator is less than \code{max_replicates},
then only the number of replicates needed will be created.
If more replicates are needed than \code{max_replicates}, then the full number of replicates
needed will be created, but only a random subsample will be retained.}
}
\description{
Form replication factors using Fay's generalized replication method
}
\examples{
  library(survey)

# Load an example dataset that uses unequal probability sampling ----
  data('election', package = 'survey')

# Create matrix to represent the Horvitz-Thompson estimator as a quadratic form ----
  n <- nrow(election_pps)
  pi <- election_jointprob
  horvitz_thompson_matrix <- matrix(nrow = n, ncol = n)
  for (i in seq_len(n)) {
    for (j in seq_len(n)) {
      horvitz_thompson_matrix[i,j] <- 1 - (pi[i,i] * pi[j,j])/pi[i,j]
    }
  }

  ## Equivalently:

  horvitz_thompson_matrix <- make_quad_form_matrix(
    variance_estimator = "Horvitz-Thompson",
    joint_probs = election_jointprob
  )

# Make generalized bootstrap adjustment factors ----

  adjustment_factors <- make_fay_gen_rep_factors(
    Sigma = horvitz_thompson_matrix,
    max_replicates = 80
  )
  attr(adjustment_factors, 'scale')
}
